Q:
今参加しているシステム開発のプロジェクトがテスト工程に差し掛かっているとする。
すでにプロジェクトも佳境、カットオーバーも近づいてきています。
そんな中、テストでシステムに次のような問題が発見されました。

画面からオンラインで出力する帳票において、現在のレイアウトでは情報が不足していることが分かった。
顧客との要件調整に漏れがあったことが原因だった。

上記の問題に対して、実装及び設計に対してどのような変更によって解決が可能か、
思いつくだけの方法を提案してください。

A:
1. 要件再確認と追加要件の収集
・顧客との再打ち合わせ: 顧客と再度打ち合わせを行い、必要な情報を詳細に確認します。どの情報が不足しているのか、具体的にヒアリング
・要件定義書の更新: 新たに確認した要件を要件定義書に反映し、顧客の承認を得る

2. データモデルの見直し
・帳票に必要な情報が不足している場合、データモデルの見直しが必要
・データベースのスキーマ変更: 必要な情報を格納するために、データベースのスキーマを変更。新しいカラムの追加やテーブルの作成が必要になる可能性もある。
・データのマイグレーション: 既存のデータに対して、新しいスキーマに合わせたデータのマイグレーションを行う

3. 帳票レイアウトの変更
・帳票のレイアウトを変更して、必要な情報を表示できるようにする
・レイアウトの再設計: 帳票のレイアウトを再設計し、必要な情報を適切に配置する。これには、フォントサイズの調整やレイアウトの再配置が含まれる。
・テンプレートの更新: 帳票生成に使用しているテンプレートを更新し、新しいレイアウトを反映させる。

4. システムの実装変更
・システムの実装を変更して、新しい要件に対応する。
・コードの修正: 帳票生成ロジックを修正し、新しいデータを取得して表示するようにする。これには、データベースクエリの変更やビジネスロジックの追加が含まれる。
・テストの実施: 修正後のシステムに対して、単体テスト、結合テスト、システムテストを実施し、帳票が正しく生成されることを確認する。

5. ユーザーインターフェースの改善
・ユーザーインターフェースを改善して、ユーザーが必要な情報を簡単に入力できるようにする。
・入力フォームの拡張: 必要な情報を入力するためのフォームを拡張し、ユーザーが漏れなく情報を入力できるようにする。
・バリデーションの追加: 入力データのバリデーションを強化し、必要な情報がすべて入力されていることを確認。

6. ドキュメントの整備
最後に、システムの変更に伴うドキュメントの整備を行う。
・設計書の更新: システム設計書を更新し、新しい要件や変更点を反映させる。
・ユーザーマニュアルの更新: ユーザーマニュアルを更新し、新しい帳票の使い方や入力方法を説明する。